{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OAEQ,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE/BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMV,SACA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCLlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAETC,EAFS,iDAEuCC,UAAUH,GAFjD,+DAGSI,MAAMF,GAHf,cAGTG,EAHS,gBAIOA,EAAUC,OAJjB,uBAIPC,EAJO,EAIPA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAV1B,kBAcTM,GAdS,4CAAH,sDCDPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACI,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJDO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECCX,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAH4B,mBACjCC,EADiC,KAC1BC,EAD0B,KA8B5C,OAvBIC,qBAAW,WAEPxB,EAASC,GACRwB,MAAM,SAAAC,GAGCC,QAAQC,IAAIF,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SASrB,CAACpB,IAKDqB,ED5B4BO,CAAa5B,GAAhCa,EAHuB,EAG5BN,KAAaa,EAHe,EAGfA,QASpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAIZ,qBAAKA,UAAU,YAAf,SAIQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aE3BxBkB,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,cAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADNA,Y,MCXjC+B,IAASC,OACN,cAAC,EAAD,IAEDC,SAASC,eAAe,W","file":"static/js/main.6aa4bcfa.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n    \n    const [inputValue, setInputValue] = useState('');\n    \n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        \n        if( inputValue.trim().length > 2){\n        // console.log('Submit hecho')\n        setCategories( cats => [ inputValue, ...cats, ]);\n        setInputValue('');\n        }\n    }\n    \n    return (\n       \n            <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />                    \n            </form>   \n            \n        \n    )\n}\n\nAddCategory.propTypes={\n    setCategories: PropTypes.func.isRequired\n\n}\n","\n\n\nexport const getGifs = async(category) => {\n\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Bw0T197osL3eMJxaDwSHH3hZsZIent7d`\n        const respuesta = await fetch(url);\n        const { data }= await respuesta.json();\n\n        const gifs = data.map( img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images.downsized_medium.url\n            }\n        })\n\n       return gifs;\n        \n\n    }","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n    \n \n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n          <img src={url} alt={title}/>\n          <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n \n    const {data:images, loading} = useFetchGifs(category);\n\n\n    \n\n\n    \n    // getGifs()\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n\n\n           \n            <div className=\"card-grid\">\n            \n                {\n                \n                    images.map( img =>(\n                        <GifGridItem \n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                    \n                }\n\n                \n\n            \n            </div>\n        </>\n    \n    )\n\n\n\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\n\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data:[],\n        loading:true\n    });\n\n\n    useEffect( () => {\n\n        getGifs( category )\n        .then( imgs => { \n\n           \n                console.log(imgs)\n                setState({\n                    data: imgs, \n                    loading:false\n                })\n\n           \n\n\n\n        })\n\n    }, [category])\n\n    \n\n\nreturn state;\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />       \n\n            <ol>\n                { \n                    categories.map( category =>(\n                        <GifGrid \n                            key={category}\n                            category={ category } \n                        />\n                    )) \n                }\n            </ol>\n            \n\n        </>\n    )\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n   <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}